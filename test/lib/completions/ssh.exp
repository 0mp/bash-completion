proc setup {} {
    save_env
}; # setup()


proc teardown {} {
    assert_env_unmodified
}; # teardown()


setup


set test "Tab should complete both commands and hostnames"
    # Try completion
set cmd "ssh -F fixtures/ssh/config ls"
send "$cmd\t"
set expected "^$cmd\r\n.*ls.*ls_known_host.*\r\n/@$cmd$"
expect {
    -re $expected  { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}; # expect


sync_after_int


set test "-F without space shouldn't error"
    # Try completion
set cmd "ssh -F"
send "$cmd\t "
set expected "^$cmd $"
expect {
    -re "^${cmd}bash: option requires an argument -- F" { fail "$test" }
    -re $expected  { pass "$test" }
    -re /@ { unresolved "$test at prompt" }
    default { unresolved "$test" }
}; # expect


sync_after_int


set test "First argument shouldn't complete with commands"
# NOTE: This test assumes the machine running this test has a command "bash"
#       but no host named "bash" ...
set cmd "ssh bas"
send "$cmd\t"
expect -ex "$cmd"
expect {
    -timeout 1
        # In case multiple commands `bas*' are completed
    -re "^\r\n.*bash.*\r\n/@$cmd$" { fail "$test" }
        # In case the single command `bash' is completed
    -re "h $" { fail "$test" }
    -re ".+" { unresolved "$test" }
    timeout { pass "$test" }
}; # expect


sync_after_int


set test "Tab should complete partial hostname"
assert_complete_partial [get_hosts] "ssh"


sync_after_int


teardown
