# Completions for various core utilities

# chown(1) completion
#
have chown &&
_chown()
{
    local cur prev words cword
    # Don't treat user:group as separate words.
    _init_completion -n := || return

    local split=false
    _split_longopt && split=true

    case "$prev" in
        --from)
            _usergroup
            return 0
            ;;
        --reference)
            _filedir
            return 0
            ;;
    esac

    $split && return 0

    if [[ "$cur" == -* ]]; then
        # Complete -options
        local w opts
        for w in "${words[@]}" ; do
            [[ "$w" == -@(R|-recursive) ]] && opts="-H -L -P" && break
        done
        COMPREPLY=( $( compgen -W '-c -h -f -R -v --changes --dereference \
            --no-dereference --from --silent --quiet --reference --recursive \
            --verbose --help --version $opts' -- "$cur" ) )
    else
        local args

        # The first argument is an usergroup; the rest are filedir.
        _count_args :

        if [[ $args -eq 1 ]]; then
            _usergroup -u
        else
            _filedir
        fi
    fi
} &&
complete -F _chown chown


# chgrp(1) completion
#
have chgrp &&
_chgrp()
{
    local cur prev words cword
    _init_completion -n = || return

    cur=${cur//\\\\/}

    local split=false
    _split_longopt && split=true

    if [[ "$prev" == --reference ]]; then
        _filedir
        return 0
    fi

    $split && return 0

    # options completion
    if [[ "$cur" == -* ]]; then
        local w opts
        for w in "${words[@]}" ; do
            [[ "$w" == -@(R|-recursive) ]] && opts="-H -L -P" && break
        done
        COMPREPLY=( $( compgen -W '-c -h -f -R -v --changes --dereference \
            --no-dereference --silent --quiet --reference --recursive \
            --verbose --help --version $opts' -- "$cur" ) )
        return 0
    fi

    # first parameter on line or first since an option?
    if [[ $cword -eq 1 && "$cur" != -* || "$prev" == -* ]]; then
        _allowed_groups "$cur"
    else
        _filedir || return 0
    fi

    return 0
} &&
complete -F _chgrp chgrp

# id(1) completion
#
have id &&
_id()
{
    local cur prev words cword
    _init_completion || return

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W '-a -g --group -G --groups -n --name\
            -r --real -u --user --help --version' -- "$cur" ) )
    else
        COMPREPLY=( $( compgen -u "$cur" ) )
    fi
} &&
complete -F _id id

# mktemp(1) completion
#
have mktemp &&
_mktemp()
{
    local cur prev words cword
    _init_completion -n = || return

    local split=false
    _split_longopt && split=true

    case "$prev" in
        --help|--version|--suffix)
            return 0
            ;;
        --tmpdir|-p)
            _filedir -d
            return 0
            ;;
    esac

    $split && return 0

    [[ "$cur" == -* ]] && \
        COMPREPLY=( $( compgen -W '-d -u -q -p -t' -- "$cur" ) )
} &&
complete -F _mktemp mktemp

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
